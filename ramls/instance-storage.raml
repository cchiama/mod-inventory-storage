#%RAML 0.8
title: Instance Storage
version: v4.4
protocols: [ HTTP, HTTPS ]
baseUri: http://localhost

documentation:
  - title: Instance Storage API
    content: <b>Storage for instances in the inventory</b>

schemas:
  - instance.json: !include instance.json
  - instances: !include instances.json
  - holdingsrecord.json: !include holdingsrecord.json
  - marc.json: !include marc.json
  - raml-util/schemas/metadata.schema: !include raml-util/schemas/metadata.schema

traits:
  - secured: !include raml-util/traits/auth.raml
  - language: !include raml-util/traits/language.raml
  - pageable: !include raml-util/traits/pageable.raml
  - searchable: !include raml-util/traits/searchable.raml

resourceTypes:
  - collection: !include raml-util/rtypes/collection.raml
  - collection-item: !include raml-util/rtypes/item-collection.raml

/instance-storage:
  /instances:
    displayName: Instances
    type:
      collection:
        exampleCollection: !include  examples/instances_get.json
        schemaCollection: instances
        schemaItem: instance.json
        exampleItem: !include  examples/instance_get.json
    get:
      is: [pageable,
          searchable: {description: "by title (using CQL)",
                        example: "title=\"*uproot*\""},
          ]
    post:
    delete:
      responses:
        204:
          description: "All instances deleted"
        500:
          description: "Internal server error, e.g. due to misconfiguration"
          body:
            text/plain:
              example: "Internal server error, contact administrator"
    /{instanceId}:
      type:
        collection-item:
          exampleItem: !include examples/instance_get.json
          schema: instance.json
      get:
        responses:
          200:
            body:
  #              type: instance
        description: |
          Get Instance by InstanceId
          Instances are stored and accessed by a hash of key properties. The rules which govern
          how instance hashes are computed are business rules and defined in the service layer.
          the storage layer only knows how to insert or retrieve instance records by ID.
      /source-record:
        is: [language]
        delete:
          responses:
            204:
              description: "Source record deleted"
            404:
              description: "There is no source record for that instanceId"
            500:
              description: "Internal server error, e.g. due to misconfiguration"
              body:
                text/plain:
                  example: "Internal server error, contact administrator"
          description: |
            Delete the source record.
            Note: The source records gets automatically deleted when its instance record is deleted.
        /marc-json:
          displayName: MARC source record as JSON
          is: [language]
          type:
            collection-item:
              exampleItem: !include examples/marc.json
              schema: marc.json
        /mods:
          displayName: MODS source record - not implemented yet
          is: [language]
          get:
            responses:
              500:
                description: "Not implemented yet"
                body:
                  text/plain:
                    example: "Not implemented yet"
          put:
            responses:
              500:
                description: "Not implemented yet"
                body:
                  text/plain:
                    example: "Not implemented yet"
